/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hk172.crypto;

import com.hk172.crypto.algorithm.AESCrypto;
import com.hk172.crypto.algorithm.BlowFishCrypto;
import com.hk172.crypto.algorithm.CryptoAlgorithm;
import com.hk172.crypto.algorithm.TDESCrypto;
import com.hk172.crypto.algorithm.HashAlgorithm;
import com.hk172.crypto.algorithm.RSACrypto;
import com.hk172.crypto.keygen.AESKeyGen;
import com.hk172.crypto.keygen.BlowFishKeyGen;
import com.hk172.crypto.keygen.TDESKeyGen;
import com.hk172.crypto.keygen.KeyGen;
import com.hk172.crypto.keygen.RSAKeyGen;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.xml.bind.DatatypeConverter;

/**
 *
 * @author ASUS
 */
public class Giao_dien extends javax.swing.JFrame {
    String file_name;
    private File inputEncryptFile;
    private File inputEncryptKey;
    private File inputDecryptFile;
    private File inputDecryptKey;

    private CryptoAlgorithm encryptAlgorithm;
    private CryptoAlgorithm decryptAlgorithm;
    private TDESCrypto dESCrypto = new TDESCrypto();
    private AESCrypto aESCrypto = new AESCrypto();
    private RSACrypto rSACrypto = new RSACrypto();
    private BlowFishCrypto BFCrypto = new BlowFishCrypto();

    private KeyGen keyGen ;
    private KeyGen DESKey = new TDESKeyGen();
    private KeyGen AESKey = new AESKeyGen();
    private KeyGen RSAKey = new RSAKeyGen();
    private KeyGen BlowFishKeyGen = new BlowFishKeyGen();
    
    /**
     * Creates new form Giao_dien
     */
    public Giao_dien() {
        initComponents();
        encryptAlgorithm = dESCrypto;
        decryptAlgorithm = dESCrypto;
        keyGen = DESKey;
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        filepath_encrypt = new javax.swing.JTextField();
        keypath_encrypt = new javax.swing.JTextField();
        openfile_encrypt = new javax.swing.JButton();
        openkey_encrypt = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        ComboBox_encrypt = new javax.swing.JComboBox<>();
        Encrypt_button = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        hashtext_encrypt = new javax.swing.JTextField();
        dir_encrypt = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        filepath_decrypt = new javax.swing.JTextField();
        keypath_decrypt = new javax.swing.JTextField();
        openfile_decrypt = new javax.swing.JButton();
        openkey_decrypt = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        ComboBox_decrypt = new javax.swing.JComboBox<>();
        Decrypt_button = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        hashtext_decrypt = new javax.swing.JTextField();
        dir_decrypt = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        method_keyGen = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        keyGen_path = new javax.swing.JTextField();
        key_save = new javax.swing.JButton();
        GenerateKey = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Choose file/folder:");

        jLabel2.setText("Choose key:");

        openfile_encrypt.setText("Browser");
        openfile_encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openfile_encryptActionPerformed(evt);
            }
        });

        openkey_encrypt.setText("Browser");
        openkey_encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openkey_encryptActionPerformed(evt);
            }
        });

        jLabel3.setText("Choose method:");

        ComboBox_encrypt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TDES", "AES", "RSA", "BlowFish" }));
        ComboBox_encrypt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBox_encryptItemStateChanged(evt);
            }
        });

        Encrypt_button.setText("Encrypt");
        Encrypt_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Encrypt_buttonActionPerformed(evt);
            }
        });

        jLabel4.setText("Hash code:  ");

        hashtext_encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hashtext_encryptActionPerformed(evt);
            }
        });

        dir_encrypt.setText("Encrypt folder");
        dir_encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dir_encryptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hashtext_encrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dir_encrypt)
                                    .addComponent(filepath_encrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ComboBox_encrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(keypath_encrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(openfile_encrypt)
                            .addComponent(openkey_encrypt))))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Encrypt_button, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(237, 237, 237))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(dir_encrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(filepath_encrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openfile_encrypt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(keypath_encrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openkey_encrypt))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ComboBox_encrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(Encrypt_button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(hashtext_encrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("   Encrypt   ", jPanel1);

        jLabel5.setText("Choose file/folder:");

        jLabel6.setText("Choose key");

        openfile_decrypt.setText("Browser");
        openfile_decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openfile_decryptActionPerformed(evt);
            }
        });

        openkey_decrypt.setText("Browser");
        openkey_decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openkey_decryptActionPerformed(evt);
            }
        });

        jLabel7.setText("Choose method");

        ComboBox_decrypt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TDES", "AES", "RSA", "BlowFish" }));
        ComboBox_decrypt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBox_decryptItemStateChanged(evt);
            }
        });

        Decrypt_button.setText("Decrypt");
        Decrypt_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Decrypt_buttonActionPerformed(evt);
            }
        });

        jLabel8.setText("Hash code (if yes):  ");

        dir_decrypt.setText("Decrypt folder");
        dir_decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dir_decryptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(keypath_decrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dir_decrypt)
                                    .addComponent(filepath_decrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ComboBox_decrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(openkey_decrypt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(openfile_decrypt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hashtext_decrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Decrypt_button, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(231, 231, 231))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(dir_decrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(filepath_decrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openfile_decrypt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(keypath_decrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openkey_decrypt))
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ComboBox_decrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(hashtext_decrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(Decrypt_button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("   Decrypt   ", jPanel2);

        jLabel9.setText("Choose method:");

        method_keyGen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TDES", "AES", "RSA", "BlowFish" }));
        method_keyGen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                method_keyGenItemStateChanged(evt);
            }
        });

        jLabel10.setText("Choode folder to save:");

        keyGen_path.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyGen_pathActionPerformed(evt);
            }
        });

        key_save.setText("Browser");
        key_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                key_saveActionPerformed(evt);
            }
        });

        GenerateKey.setText("Generate key");
        GenerateKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(keyGen_path, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(key_save))
                    .addComponent(method_keyGen, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GenerateKey, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(237, 237, 237))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(method_keyGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(keyGen_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(key_save))
                .addGap(68, 68, 68)
                .addComponent(GenerateKey, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("   Generate key   ", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openfile_encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openfile_encryptActionPerformed
        // TODO add your handling code here:
        if (dir_encrypt.isSelected()==true) {
            
            open_file obj= new open_file();
            try {
                inputEncryptFile = obj.open_folder();
            }catch (Exception e){
                e.printStackTrace();
            }
            filepath_encrypt.setText(obj.sb2);
            //file_name = obj.filename;
            
        }
        else{
        open_file obj= new open_file();
        try {
            inputEncryptFile = obj.open_file();
        }catch (Exception e){
            e.printStackTrace();
        }
        filepath_encrypt.setText(obj.sb2);
        file_name = obj.filename;
        }
    }//GEN-LAST:event_openfile_encryptActionPerformed

    private void openkey_encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openkey_encryptActionPerformed
        // TODO add your handling code here:
        open_file obj= new open_file();
        try {
            inputEncryptKey = obj.open_file();
        }catch (Exception e){
            e.printStackTrace();
        }
        keypath_encrypt.setText(obj.sb2);
    }//GEN-LAST:event_openkey_encryptActionPerformed

    private void Encrypt_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Encrypt_buttonActionPerformed
        String afterMessage = "Encrypt Success";
        if (dir_encrypt.isSelected()==true){
            
            File[] listOfFiles = inputEncryptFile.listFiles();
            new File(listOfFiles[0].getParent()+"_encrypt").mkdir();
            //System.out.print(listOfFiles[0].getParent());
            for (int i = 0; i < listOfFiles.length; i++) {
                if (listOfFiles[i].isFile()==true) {
                    try {
                    encryptAlgorithm.setInputFile(listOfFiles[i]);
                    encryptAlgorithm.setInputKey(inputEncryptKey);                    
                    encryptAlgorithm.encrypt(listOfFiles[i].getParent()+ "_encrypt"+ "//encrypt_" + listOfFiles[i].getName());       
                    //hash_text.setText(HashAlgorithm.hashFile(listOfFiles[i], "MD5"));
                    } catch (Exception e) {
                        e.printStackTrace();
                        afterMessage = "Encrypt Failed";
                    }
                } 
            }   
        }
        else {
            try {
                encryptAlgorithm.setInputFile(inputEncryptFile);
                encryptAlgorithm.setInputKey(inputEncryptKey);

                encryptAlgorithm.encrypt(inputEncryptFile.getParent() + "//encrypt_" + file_name);

                hashtext_encrypt.setText(HashAlgorithm.hashFile(inputEncryptFile, "MD5"));
            } catch (Exception e) {
                e.printStackTrace();
                afterMessage = "Encrypt Failed";
            }
        }
        JOptionPane.showMessageDialog(null, afterMessage);
        //jProgressBar1.setIndeterminate(false);
    }//GEN-LAST:event_Encrypt_buttonActionPerformed

    private void ComboBox_encryptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBox_encryptItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String selectedItem = ComboBox_encrypt.getSelectedItem().toString();
            if (selectedItem.equals("TDES"))
                encryptAlgorithm = dESCrypto;
            if (selectedItem.equals("AES"))
                encryptAlgorithm = aESCrypto;
            if (selectedItem.equals("RSA"))
                encryptAlgorithm = rSACrypto;
            if (selectedItem.equals("BlowFish"))
                encryptAlgorithm = BFCrypto;
        }
        else 
            return;
    }//GEN-LAST:event_ComboBox_encryptItemStateChanged

    private void method_keyGenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_method_keyGenItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String selectedItem = method_keyGen.getSelectedItem().toString();
            if (selectedItem.equals("TDES"))
                keyGen = DESKey;
            if (selectedItem.equals("AES"))
                keyGen = AESKey;
            if (selectedItem.equals("RSA"))
                keyGen = RSAKey;
            if (selectedItem.equals("BlowFish"))
                keyGen = BlowFishKeyGen;
        }
    }//GEN-LAST:event_method_keyGenItemStateChanged

    private void keyGen_pathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyGen_pathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keyGen_pathActionPerformed

    private void key_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_key_saveActionPerformed

        JFileChooser save = new JFileChooser();
        save.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (save.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
            
            keyGen_path.setText(save.getSelectedFile().getAbsolutePath());
        }
        
    }//GEN-LAST:event_key_saveActionPerformed

    private void GenerateKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateKeyActionPerformed
        // TODO add your handling code here:
        keyGen.writeToFile(keyGen_path.getText());
        JOptionPane.showMessageDialog(null, "Key Generated");
    }//GEN-LAST:event_GenerateKeyActionPerformed

    private void hashtext_encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hashtext_encryptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hashtext_encryptActionPerformed

    private void Decrypt_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Decrypt_buttonActionPerformed
        // TODO add your handling code here:
        String afterMessage = "Decrypt Success";
        String hashCheck = "";
        if (dir_encrypt.isSelected()==true){
            File[] listOfFiles = inputDecryptFile.listFiles();
            new File(listOfFiles[0].getParent()+"_decrypt").mkdir();
            //System.out.print(listOfFiles[0].getParent());
            for (int i = 0; i < listOfFiles.length; i++) {
                if (listOfFiles[i].isFile()==true) {
                    try {
                    decryptAlgorithm.setInputFile(listOfFiles[i]);
                    decryptAlgorithm.setInputKey(inputEncryptKey);                    
                    decryptAlgorithm.decrypt(listOfFiles[i].getParent()+ "_decrypt"+"//decrypt_" + listOfFiles[i].getName());       
                    } catch (Exception e) {
                        e.printStackTrace();
                        afterMessage = "Decrypt Failed";
                    }
                } 
            }   
        }
        else {
            try {
                decryptAlgorithm.setInputFile(inputDecryptFile);
                decryptAlgorithm.setInputKey(inputDecryptKey);
                String outputFilePath = inputDecryptFile.getParent() + "//decrypt_" + file_name;
                decryptAlgorithm.decrypt(outputFilePath);
                String hashString = hashtext_decrypt.getText();
                String hashResult = HashAlgorithm.hashFile(new File(outputFilePath), "MD5");
                
                System.out.println(hashResult);
                if (hashString.equals(hashResult)){
                    hashCheck = "Hash check success";
                }
                else if (!hashString.equals("")){
                    hashCheck = "Hash check failed";
                }
            } catch (Exception e) {
                e.printStackTrace();
                afterMessage = "Decrypt Failed";
            }
        }
        JOptionPane.showMessageDialog(null, afterMessage + "\n" + hashCheck);
    }//GEN-LAST:event_Decrypt_buttonActionPerformed

    private void ComboBox_decryptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBox_decryptItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String selectedItem = ComboBox_decrypt.getSelectedItem().toString();
            if (selectedItem.equals("TDES"))
                decryptAlgorithm = dESCrypto;
            if (selectedItem.equals("AES"))
                decryptAlgorithm = aESCrypto;
            if (selectedItem.equals("RSA"))
                decryptAlgorithm = rSACrypto;
            if (selectedItem.equals("BlowFish"))
                decryptAlgorithm = BFCrypto;
        }
    }//GEN-LAST:event_ComboBox_decryptItemStateChanged

    private void openkey_decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openkey_decryptActionPerformed
        // TODO add your handling code here:
        open_file obj= new open_file();
        try {
            inputDecryptKey = obj.open_file();
        }catch (Exception e){
            e.printStackTrace();
        }
        keypath_decrypt.setText(obj.sb2);
    }//GEN-LAST:event_openkey_decryptActionPerformed

    private void openfile_decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openfile_decryptActionPerformed
        if (dir_decrypt.isSelected()==true) {
            open_file obj= new open_file();
            try {
                inputDecryptFile = obj.open_folder();
            }catch (Exception e){
                e.printStackTrace();
            }
            filepath_decrypt.setText(obj.sb2);
            
        }
        else{
        open_file obj= new open_file();
            try {
                inputDecryptFile = obj.open_file();
            }catch (Exception e){
                e.printStackTrace();
            }
            filepath_decrypt.setText(obj.sb2);
            file_name = obj.filename;
        }
    }//GEN-LAST:event_openfile_decryptActionPerformed

    private void dir_encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dir_encryptActionPerformed
        if (dir_encrypt.isSelected()==true){
            hashtext_encrypt.setEnabled(false);
        }
        else hashtext_encrypt.setEnabled(true);
    }//GEN-LAST:event_dir_encryptActionPerformed

    private void dir_decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dir_decryptActionPerformed
        if (dir_decrypt.isSelected()==true){
            hashtext_decrypt.setEnabled(false);
        }
        else hashtext_decrypt.setEnabled(true);
    }//GEN-LAST:event_dir_decryptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Giao_dien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Giao_dien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Giao_dien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Giao_dien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame mainFrame = new Giao_dien();
                mainFrame.setResizable(false);
                mainFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox_decrypt;
    private javax.swing.JComboBox<String> ComboBox_encrypt;
    private javax.swing.JButton Decrypt_button;
    private javax.swing.JButton Encrypt_button;
    private javax.swing.JButton GenerateKey;
    private javax.swing.JCheckBox dir_decrypt;
    private javax.swing.JCheckBox dir_encrypt;
    private javax.swing.JTextField filepath_decrypt;
    private javax.swing.JTextField filepath_encrypt;
    private javax.swing.JTextField hashtext_decrypt;
    private javax.swing.JTextField hashtext_encrypt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField keyGen_path;
    private javax.swing.JButton key_save;
    private javax.swing.JTextField keypath_decrypt;
    private javax.swing.JTextField keypath_encrypt;
    private javax.swing.JComboBox<String> method_keyGen;
    private javax.swing.JButton openfile_decrypt;
    private javax.swing.JButton openfile_encrypt;
    private javax.swing.JButton openkey_decrypt;
    private javax.swing.JButton openkey_encrypt;
    // End of variables declaration//GEN-END:variables
}
